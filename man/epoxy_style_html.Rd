% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epoxy_style_html.R
\name{epoxy_style_html}
\alias{epoxy_style_html}
\title{Concise syntax for expressions inside HTML elements}
\usage{
epoxy_style_html(
  class = NULL,
  element = "span",
  transformer = glue::identity_transformer
)
}
\arguments{
\item{class}{\verb{[character()]}\cr Additional classes to be added to the inline
HTML element.}

\item{element}{\verb{[character()}\cr The default HTML element tag name to be used
when an element isn't specified in the expression.}

\item{transformer}{The transformer to apply to the replacement string. This
argument is used for chaining the transformer functions. By providing a
function to this argument you can apply an additional transformation after
the current transformation. In nearly all cases, you can let
\code{epoxy_style()} handle this for you. The chain ends when
\code{\link[glue:identity_transformer]{glue::identity_transformer()}} is used as the \code{transformer}.}
}
\description{
\code{epoxy_style_html()} provides a \href{https://pughtml.com/what-is-pug-html}{pug}-
like syntax for expressions in HTML that are wrapped in HTML elements.
}
\examples{
# epoxy_style_html() is included by default in `epoxy_html()`

epoxy_html("<ul>{{ li letters[1:3] }}</ul>")
epoxy_html("<ul>{{ li.alpha letters[1:3] }}</ul>")

epoxy_html(
  "{{ h3#title title }}",
  title = "Epoxy Style for HTML"
)

}
\seealso{
Other epoxy-style glue transformers: 
\code{\link{epoxy_style_format}()},
\code{\link{epoxy_style}()}
}
\concept{epoxy-style glue transformers}
