% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shiny.R
\name{epoxy_output_mustache}
\alias{epoxy_output_mustache}
\title{Epoxy HTML Mustache Template}
\usage{
epoxy_output_mustache(id, ..., sep = "", container = "div")
}
\arguments{
\item{id}{The ID of the output.}

\item{...}{Character strings of HTML or \link[htmltools:builder]{htmltools::tags}. All elements
should be unnamed.}

\item{sep}{The separator used to concatenate elements in \code{...}.}

\item{container}{A character tag name, e.g. \code{"div"} or \code{"span"}, or a
function that returns an \code{\link[htmltools:builder]{htmltools::tag()}}.}
}
\value{
Returns a Shiny output UI element.
}
\description{
A Shiny output that uses \href{https://mustache.github.io/}{mustache templating}
to render HTML. Mustache is a powerful template language with minimal
internal logic. The advantage of \code{epoxy_output_mustache()} is that all parts
of the HTML can be templated -- including element attributes -- whereas
\code{\link[=epoxyHTML]{epoxyHTML()}} requires that the dynamic template variables appear in the text
portion of the UI.
}
\examples{
if (interactive()) {
  library(shiny)
  library(epoxy)

  ui <- shiny::fluidPage(
    shiny::fluidRow(
      shiny::column(
        width = 6,
        epoxy_output_mustache(
          id = "template",
          h2(class = "{{heading_class}}", "Hello, {{name}}!"),
          "{{#fruits}}",
          p("Your favorite fruits are..."),
          tags$ul(HTML("{{#fruit}}<li>{{.}}</li>{{/fruit}}")),
          "{{/fruits}}",
          "{{^fruits}}<p>Do you have any favorite fruits?</p>{{/fruits}}"
        )
      ),
      shiny::column(
        width = 6,
        h2("Inputs"),
        textInput("name", "Your name", "user"),
        textInput("fruits", "Favorite fruits", placeholder = "apple, banana"),
        helpText("Enter a comma-separated list of fruits.")
      )
    )
  )

  server <- function(input, output, session) {
    output$template <- render_epoxy(
      name = input$name,
      heading_class = if (nzchar(input$name) && input$name != "user") {
        "text-success"
      },
      fruits = if (nzchar(input$fruits)) {
        list(fruit = strsplit(input$fruits, "\\\\s*,\\\\s*")[[1]])
      }
    )
  }

  shinyApp(ui, server)
}
}
\seealso{
\code{\link[=epoxyHTML]{epoxyHTML()}}, \code{\link[=render_epoxy]{render_epoxy()}}
}
