[{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Garrick Aden-Buie Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Garrick Aden-Buie. Author, maintainer.","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aden-Buie G (2022). epoxy: String Interpolation 'R Markdown' Documents. R package version 0.0.2.9000, https://github.com/gadenbuie/epoxy.","code":"@Manual{,   title = {epoxy: String Interpolation for 'R Markdown' Documents},   author = {Garrick Aden-Buie},   year = {2022},   note = {R package version 0.0.2.9000},   url = {https://github.com/gadenbuie/epoxy}, }"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/index.html","id":"epoxy","dir":"","previous_headings":"","what":"String Interpolation for R Markdown Documents","title":"String Interpolation for R Markdown Documents","text":"epoxy makes templating glue easy R Markdown documents Shiny apps. epoxy proof--concept stage right now. ’m still experimenting, API may change. ’d love hear thoughts, feel free open issues.","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"String Interpolation for R Markdown Documents","text":"can install proof--concept version epoxy remotes gadenbuie.r-universe.dev.","code":"# install.packages(\"remotes\") remotes::install_github(\"gadenbuie/epoxy\") options(repos = c(   gadenbuie = \"https://gadenbuie.r-universe.dev/\",   getOptions(repos) ))  install.packages(\"epoxy\")"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"String Interpolation for R Markdown Documents","text":"Loading epoxy adds new chunk type called epoxy. ⚠️ Note previously, epoxy provided glue chunk, clashes chunk engine provided glue package. wish restore use epoxy’s glue chunk, can include following setup chunk.","code":"library(epoxy) epoxy:::epoxy_set_knitr_engines(use_glue_engine = TRUE)"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/index.html","id":"epoxy-chunks","dir":"","previous_headings":"Example","what":"epoxy chunks","title":"String Interpolation for R Markdown Documents","text":"can write regular markdown epoxy chunk, wrapping R expressions {...}, just like glue::glue(). average speed cars 15.4 mph. average distance travelled 42.98 ft. arguments glue::glue() available chunk options, can configure .open .close characters, e.g. {{ instead {, among options. amazing stroke luck, RStudio autocompletion works inside epoxy chunks!","code":"```{epoxy} The average speed of the cars was **{mean(cars$speed)} mph.** But on average the distance travelled was only _{mean(cars$dist)}_. ```"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/index.html","id":"style-replaced-values","dir":"","previous_headings":"Example","what":"Style replaced values","title":"String Interpolation for R Markdown Documents","text":"can use epoxy_style_wrap() .transformer chunk option wrap evaluated R expression formating templating text. can use pre-set epoxy_style_bold(), epoxy_style_italic(), epoxy_style_code() style transformers. cars stopped 2 120 feet starting speed 4—120 mph.","code":"```{epoxy, .transformer = epoxy_style_bold()} All cars stopped between {min(cars$dist)} and {max(cars$dist)} feet from a starting speed of {min(cars$speed)}---{max(cars$speed)} ```"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/index.html","id":"epoxy-chunks-are-vectorized","dir":"","previous_headings":"Example","what":"epoxy chunks are vectorized","title":"String Interpolation for R Markdown Documents","text":"Unlike inline R code, epoxy chunks vectorized. can something watch can advantage: “” apple “b” banana “c” coconut “d” donut can collapse fields automatically using epoxy_style_collapse() transformer. can choose vectors collapsed adding *, & | end expression. * collapses commas, e.g. {letters[1:3]*}. & collapses commas adds \" \" last two items | collapses commas adds \" \" last two items. first three letters , b, c. capitalized, , B C. ’re indexed 1, 2 3. can change separator entries last entry using sep, last _and _or specific arguments epoxy_style_collapse() function.","code":"```{epoxy} {1:4}. \"{letters[1:4]}\" is for {c(\"apple\", \"banana\", \"coconut\", \"donut\")} ``` ```{epoxy, .transformer = epoxy_style_collapse()} - The first three letters are {letters[1:3]*}. - When capitalized, they are {LETTERS[1:3]&}. - They're indexed by {1:3|}. ```"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/index.html","id":"templating-with-epoxy-chunks","dir":"","previous_headings":"Example","what":"Templating with epoxy chunks","title":"String Interpolation for R Markdown Documents","text":"’s also possible create reusable template. Use ref.label chunk option reuse template using values data chunk option, can list data frame. Chevrolet Malibu gets 19 city 27 highway miles per gallon. Dodge Caravan gets 7 city 24 highway miles per gallon. Ford Expedition gets 11 city 17 highway miles per gallon.","code":"mpg <- data.frame(   manufacturer = c(\"Chevrolet\", \"Dodge\", \"Ford\"),   model = c(\"Malibu\", \"Caravan\", \"Expedition\"),   cty = c(19, 7, 11),   hwy = c(27, 24, 17) ) ```{epoxy car-name, eval=FALSE} - A {manufacturer} {model} gets {cty} city and {hwy} highway miles per gallon. ```  ```{epoxy ref.label=\"car-name\", data = mpg} ```"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/index.html","id":"whisker-engine","dir":"","previous_headings":"","what":"Whisker Engine","title":"String Interpolation for R Markdown Documents","text":"Sometimes epoxy engine doesn’t quite deliver template power need. cases, can use whisker engine instead. Hello R User: just won $1000! Well, $600, taxes.","code":"```{r} contestant <- list(name = \"R User\", value = 1000, taxed = 600, in_ca = TRUE) ```  ```{whisker data = contestant, echo=FALSE} Hello {{name}}: You have just won ${{value}}! {{#in_ca}} Well, ${{taxed}}, after taxes. {{/in_ca}} ``` contestant <- list(name = \"R User\", value = 1000, taxed = 600, in_ca = TRUE)"},{"path":[]},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/index.html","id":"html-blocks","dir":"","previous_headings":"Raw Blocks","what":"HTML Blocks","title":"String Interpolation for R Markdown Documents","text":"Use epoxy_html block epoxy (glue) R HTML together. output raw HTML. default, expressions types blocks wrapped {{ }}, like whisker templates . Chevrolet Malibu Dodge Caravan Ford Expedition","code":"<ul> ```{epoxy_html, data = mpg}   <li><strong>{{manufacturer}}<\/strong> <em>{{model}}<\/em><\/li> ``` <\/ul>"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/index.html","id":"latex-blocks","dir":"","previous_headings":"Raw Blocks","what":"LaTeX Blocks","title":"String Interpolation for R Markdown Documents","text":"Similarly, can also use epoxy_latex blocks epoxy R LaTeX together. default, expressions types blocks wrapped < >. R Markdown knitting LaTeX output, renders :","code":"\\begin{itemize} ```{epoxy_latex, data = mpg} \\item \\textbf{<manufacturer>} \\textit{<model>} gets <cty> city and <hwy> highway miles per gallon. ``` \\end{itemize} \\begin{itemize} \\item \\textbf{Chevrolet} \\textit{Malibu} gets 19 city and 27 highway miles per gallon. \\item \\textbf{Dodge} \\textit{Caravan} gets 7 city and 24 highway miles per gallon. \\item \\textbf{Ford} \\textit{Expedition} gets 11 city and 17 highway miles per gallon. \\end{itemize}"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/bechdel.html","id":null,"dir":"Reference","previous_headings":"","what":"Top 10 Highest-Rated, Bechdel-Passing Movies — bechdel","title":"Top 10 Highest-Rated, Bechdel-Passing Movies — bechdel","text":"small dataset epoxy demonstrations top audience-rated movies pass Bechdel Test.","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/bechdel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Top 10 Highest-Rated, Bechdel-Passing Movies — bechdel","text":"","code":"bechdel"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/bechdel.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Top 10 Highest-Rated, Bechdel-Passing Movies — bechdel","text":"data frame 10 rows 18 variables: imdb_id IMDB Movie ID bechdel_rating Rating (0-3): 0 = unscored; 1 = least two (named) women ; 2 = talk ; 3 = something besides man. year Year title Title movie budget Budget $USD release year domgross Domestic gross $USD release year intgross International gross $USD release year plot Plot movie rated Moving rating, e.g. PG, PG-13, R, etc. language Language movie country Country movie produced imdb_rating IMDB rating movie, 0-10 director Director movie actors Major actors appearing movie genre Genre awards Awards won movie, text description runtime Movie runtime minutes poster URL movie poster image, sourced themoviedb.org. Poster images URLs ar provided TMDB API epoxy endorsed certified TMDB.","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/bechdel.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Top 10 Highest-Rated, Bechdel-Passing Movies — bechdel","text":"TidyTuesday (2021-03-09), FiveThirtyEight, bechdeltest.com, themoviedb.org","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxy-package.html","id":null,"dir":"Reference","previous_headings":"","what":"epoxy: String Interpolation for 'R Markdown' Documents — epoxy-package","title":"epoxy: String Interpolation for 'R Markdown' Documents — epoxy-package","text":"Experimental. String interpolation 'R Markdown' documents 'Shiny' apps.","code":""},{"path":[]},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxy-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"epoxy: String Interpolation for 'R Markdown' Documents — epoxy-package","text":"Maintainer: Garrick Aden-Buie garrick@adenbuie.com (ORCID)","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxyHTML.html","id":null,"dir":"Reference","previous_headings":"","what":"Epoxy HTML Output for Shiny — epoxyHTML","title":"Epoxy HTML Output for Shiny — epoxyHTML","text":"Expermimental. glue-like output Shiny. epoxyHTML() lets use placeholders HTML \"{{height}}\", provided values server giving renderEpoxyHTML() height value.","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxyHTML.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Epoxy HTML Output for Shiny — epoxyHTML","text":"","code":"epoxyHTML(   .id,   ...,   .class = NULL,   .class_item = NULL,   .container = \"div\",   .container_item = \"span\",   .placeholder = \"\",   .sep = \"\",   .open = \"{{\",   .close = \"}}\",   .na = \"\",   .trim = FALSE )"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxyHTML.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Epoxy HTML Output for Shiny — epoxyHTML","text":".id output id ... UI elements text (treated HTML), containing template variables. Use named values provide initial placeholder values. .class Classes added output div, addition .epoxy-html .class_item Classes added .container wrapping template variable. .container name HTML element used output element, default \"div\". .container_item name HTML element used template item, default \"span\". .placeholder Default placeholder template variable placeholder provided. .sep [character(1): ‘\"\"’] Separator used separate elements. .open Opening template variable delimiter .close Closing template variable delimiter .na [character(1): ‘NA’] Value replace NA values . NULL missing values propagated, NA result cause NA output. Otherwise value replaced value .na. .trim [logical(1): ‘TRUE’] Whether trim input template trim() .","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxyHTML.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Epoxy HTML Output for Shiny — epoxyHTML","text":"HTML object.","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxyHTML.html","id":"html-markup","dir":"Reference","previous_headings":"","what":"HTML Markup","title":"Epoxy HTML Output for Shiny — epoxyHTML","text":"default, placeholders inserted <span> element UI, classes specified .class_item. epoxyHTML() also supports HTML markup syntax similar pug (HTML preprocessor). markup syntax, \"{{h3.example.basic%basic-three demo}}\" creates demo placeholder inside <h3 id=\"basic-three\" class=\"example basic\"><\/h3> tag. placeholder template string follows pattern {{<markup> <name>}}. markup syntax comes first, separated placeholder name space. HTML element first, followed classes prefixed . ID prefixed #. template markup can contain one element one ID, many classes can specified.","code":""},{"path":[]},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxyHTML.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Epoxy HTML Output for Shiny — epoxyHTML","text":"","code":"if (FALSE) { library(shiny)  ui <- fluidPage(   h2(\"epoxyHTML demo\"),   epoxy:::epoxyHTML(     'test',     fluidRow(       tags$div(         class = \"col-xs-4\",         selectInput(           inputId = \"thing\",           label = \"What is this {{color}} thing?\",           choices = c(\"apple\", \"banana\", \"coconut\", \"dolphin\")         )       ),       tags$div(         class = \"col-xs-4\",         selectInput(           inputId = \"color\",           label = \"What color is the {{thing}}?\",           c(\"red\", \"blue\", \"black\", \"green\", \"yellow\")         )       ),       tags$div(         class = \"col-xs-4\",         sliderInput(           inputId = \"height\",           label = \"How tall is the {{color}} {{thing}}?\",           value = 5,           min = 0,           max = 10,           step = 0.1,           post = \"ft\"         )       )     ),     tags$p(class = \"big\", \"The {{color}} {{thing}} is {{height}} feet tall.\"),     thing = \"THING\",     color = \"COLOR\",     height = \"HEIGHT\",     .class_item = \"inner\"   ),   tags$style(HTML(     '.big { font-size: 1.5em; }     .inner:not(.epoxy-item__placeholder) { background-color: rgba(254, 233, 105, 0.5)}     .epoxy-item__placeholder { color: #999999; }'   )) )  server <- function(input, output, session) {   output$test <- epoxy:::renderEpoxyHTML(     thing = input$thing,     color = input$color,     height = input$height   ) }  shinyApp(ui, server) }"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxy_style.html","id":null,"dir":"Reference","previous_headings":"","what":"epoxy Style Transformers — epoxy_style","title":"epoxy Style Transformers — epoxy_style","text":"transformers provide additional automatic formatting template strings. designed used .transformer chunk option epoxy chunks. can use epoxy_style() chain several transformers together.","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxy_style.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"epoxy Style Transformers — epoxy_style","text":"","code":"epoxy_style(...)  epoxy_style_wrap(   before = \"**\",   after = \"**\",   transformer = glue::identity_transformer )  epoxy_style_bold(transformer = glue::identity_transformer)  epoxy_style_italic(transformer = glue::identity_transformer)  epoxy_style_code(transformer = glue::identity_transformer)  epoxy_style_collapse(   sep = \", \",   last = \"\",   last_and = \" and \",   last_or = \" or \",   sep_and = sep,   sep_or = sep,   transformer = glue::identity_transformer )"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxy_style.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"epoxy Style Transformers — epoxy_style","text":"... list style functions, e.g. epoxy_style_bold name style function, e.g. \"bold\", call style function, e.g. epoxy_style_bold(). epoxy_style() chains style functions together, applying styles left right. example, epoxy_style(\"bold\", \"collapse\") results replaced strings emboldened collapsed, e.g. **** **b**. hand, epoxy_style(\"collapse\", \"bold\")  collapse vector embolden entire string. , epoxy_style_wrap(), characters added variables template string. sep, sep_and, sep_or separator use joining vector elements variable ends *, &, | respectively. default, \", \". last, last_and, last_or Additional text added sep last element variable ends *, &, | respectively.","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxy_style.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"epoxy Style Transformers — epoxy_style","text":"epoxy_style_wrap: Wrap variables epoxy_style_bold: Embolden variables using markdown ** syntax epoxy_style_italic: Italicize variables using markdown _ syntax epoxy_style_code: Code format variables using markdown backtick syntax epoxy_style_collapse: Collapse vector variables.","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/epoxy_style.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"epoxy Style Transformers — epoxy_style","text":"","code":"glue::glue(\"{letters[1:3]&}\", .transformer = epoxy_style(\"bold\", \"collapse\")) #> **a**, **b** and **c** glue::glue(\"{letters[1:3]&}\", .transformer = epoxy_style(\"collapse\", \"bold\")) #> **a, b and c**"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/renderEpoxyHTML.html","id":null,"dir":"Reference","previous_headings":"","what":"Render Epoxy Output — renderEpoxyHTML","title":"Render Epoxy Output — renderEpoxyHTML","text":"Server-side render function used provide values template items. Use named values matching template variable names associated epoxyHTML().","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/renderEpoxyHTML.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render Epoxy Output — renderEpoxyHTML","text":"","code":"renderEpoxyHTML(..., .list = NULL, env = parent.frame(), outputArgs = list())"},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/reference/renderEpoxyHTML.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render Epoxy Output — renderEpoxyHTML","text":"... Named values corresponding template variables created associated epoxyHTML() UI element. .list named list shiny::reactiveValues() list names corresponding template variables created associated epoxyHTML() UI element. env environment evaluate ... outputArgs list arguments passed implicit call epoxyHTML() renderEpoxyHTML used interactive R Markdown document.","code":""},{"path":[]},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/news/index.html","id":"epoxy-0029000","dir":"Changelog","previous_headings":"","what":"epoxy 0.0.2.9000","title":"epoxy 0.0.2.9000","text":"epoxy’s knitr engine now epoxy glue. avoids name clash glue package, provides glue knitr engine similar functionality. epoxy also provides epoxy_html epoxy_latex knitr engines, although can still used via aliases glue_html glue_latex. (#21) epoxyHTML() now render elements IDs using # syntax, e.g. {{h3#name.author full_name}} create element (essentially) <h3 id=\"name\" class=\"author\">{{ full_name }}<\/h3> (#22). epoxy requires glue >= 1.5.0. Added new internal dataset, bechdel, containing details random sample ten movies received score 3 Bechdel Test (#24).","code":""},{"path":"http://pkg.garrickadenbuie.com/epoxy/preview/pr26/news/index.html","id":"epoxy-002","dir":"Changelog","previous_headings":"","what":"epoxy 0.0.2","title":"epoxy 0.0.2","text":"Added whisker engine uses whisker package instead glue. chunk option glue_data changed data. glue_html engine now uses {{ }} open/close delimiters. glue/whisker chunks now accept .envir chunk option containing environemnt, otherwise falling back knitr::knit_global() env.","code":""}]
